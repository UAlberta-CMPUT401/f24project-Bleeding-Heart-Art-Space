/*
Test for US 1.03 - Create and Manage Events
As an Admin, I want to create and manage events so that I can schedule volunteer opportunities.
Acceptance Criteria: Admin can create an event by clicking on an empty spot in the calendar.
                     Admin can specify event details like title, date, time, venue & address.

Test for US 2.03 - View Available Events on a Calendar
As a Volunteer, I want to view available events on a calendar so that I can choose which events to sign up for.
Acceptance Criteria: Volunteers can see a calendar view of all upcoming events.

Generated by Selenium IDE and modified after
*/

const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');

describe('clickCalendar', function() {
  this.timeout(30000);
  let driver;
  let vars;

  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build();
    vars = {};
  });

  afterEach(async function() {
    await driver.quit();
  });

  it('clickCalendar', async function() {
    await driver.get("http://localhost:5173/")
    await driver.manage().window().setRect({ width: 1292, height: 684 })
    await driver.findElement(By.css(".MuiButton-contained")).click()
    await driver.findElement(By.id(":r1:")).click()
    await driver.findElement(By.id(":r1:")).sendKeys("a@test.com")
    await driver.findElement(By.id(":r3:")).click()
    await driver.findElement(By.id(":r3:")).sendKeys("atestatest")
    await driver.findElement(By.css(".css-2mkfr1-MuiButtonBase-root-MuiButton-root")).click()
    await driver.sleep(1000);
    await driver.get("http://localhost:5173/calendar");
    await driver.manage().window().setRect({ width: 1292, height: 684 });

    // STEP 1: CREATE AN EVENT BY CLICKING ON THE CALENDAR
    
    // Click a date on the calendar
    await driver.findElement(By.css(".rbc-month-row:nth-child(4) .rbc-date-cell:nth-child(4)")).click();

    await driver.get("http://localhost:5173/calendar")
    await driver.manage().window().setRect({ width: 1024, height: 768 });
    await driver.executeScript("document.body.style.zoom='70%';");

    await driver.findElement(By.css(".rbc-month-row:nth-child(4) .rbc-date-cell:nth-child(4)")).click();

    await driver.wait(until.elementIsVisible(driver.findElement(By.css(".MuiDialog-root"))), 10000);
    const inputField = await driver.findElement(By.id(":r3:"));
    await driver.executeScript("arguments[0].scrollIntoView(true);", inputField);
    await inputField.click();

    // This part populates the fields with values
    await driver.findElement(By.id(":r3:")).sendKeys("Click Calendar Test")
    await driver.findElement(By.id(":r5:")).click()
    await driver.findElement(By.id(":r5:")).sendKeys("ABC")
    await driver.findElement(By.id(":r7:")).click()
    await driver.findElement(By.id(":r7:")).sendKeys("10/28/2024")
    await driver.findElement(By.id(":rb:")).click()
    await driver.findElement(By.id(":rb:")).sendKeys("10/28/2024")
    await driver.findElement(By.id(":r9:")).click()
    await driver.findElement(By.id(":r9:")).clear()
    await driver.findElement(By.id(":r9:")).sendKeys("08:30")
    await driver.findElement(By.id(":r9:")).sendKeys(Key.TAB);
    await driver.findElement(By.id(":r9:")).sendKeys(Key.TAB);
    await driver.findElement(By.id(":r9:")).sendKeys(Key.TAB);
    await driver.findElement(By.id(":r9:")).sendKeys(Key.ARROW_DOWN);
    await driver.findElement(By.id(":r9:")).sendKeys(Key.ARROW_DOWN);
    await driver.findElement(By.id(":r9:")).sendKeys(Key.RETURN);

    await driver.findElement(By.id(":rd:")).click()
    await driver.findElement(By.id(":rd:")).click()
    await driver.findElement(By.id(":rd:")).sendKeys("15:06")

    await driver.findElement(By.id(":rf:")).click()
    {
      const element = await driver.findElement(By.css(".\\_dialogCard_hfpfo_15"))
      await driver.executeScript("arguments[0].scrollIntoView(true);", element);
      await element.click();
    }
    await driver.findElement(By.id(":rf:")).sendKeys("DEF")

    // This part clicks the submit button and verifies the alert pop-up
    await driver.findElement(By.css(".css-1dj9jbk-MuiButtonBase-root-MuiButton-root")).click();

    // STEP 2: VERIFY THE EVENT EXISTS ON THE CALENDAR
    // Wait for the calendar to update (optional: adjust wait if needed)
    await driver.sleep(2000);
    // Search for the event by the title in the calendar view
    const eventExists = await driver.findElement(By.xpath("//*[contains(text(), 'Click Calendar Test')]"));
    // Assert that the event is found
    assert(eventExists !== null, "The event 'Click Calendar Test' was not found on the calendar!");

  });
});
